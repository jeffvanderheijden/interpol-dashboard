{"version":3,"sources":["webpack:///./src/components/Login/Login.js","webpack:///./src/helpers/data/dataLayer.js","webpack:///./src/pages/login.jsx"],"names":["Login","useEffect","checkSession","then","hasSession","navigate","React","createElement","id","onSubmit","e","async","preventDefault","formData","FormData","append","target","elements","username","value","password","login","submitForm","type","placeholder","className","response","fetch","method","body","credentials","responseText","text","ok","Error","status","loginResponse","JSON","parse","error","console","log","message","userData","json","dataLayer","LoginPage","NoSSR","Layout","SEO","title","Head"],"mappings":"8FAAA,2DAuCeA,IAlCDA,KAYVC,oBAAU,KACNC,YAAa,WAAWC,KAAKC,IAEzBA,GAAcC,mBAAS,gBAE3BH,YAAa,UAAUC,KAAKC,IAExBA,GAAcC,mBAAS,wBAE5B,IAGCC,IAAAC,cAAA,OAAKC,GAAG,gBACJF,IAAAC,cAAA,QAAMC,GAAG,YAAYC,SAAWC,IAvBrBC,WACfD,EAAEE,iBACF,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAYL,EAAEM,OAAOC,SAASC,SAASC,OACvDN,EAASE,OAAO,WAAYL,EAAEM,OAAOC,SAASG,SAASD,OAEvDE,YAAMR,IAiBsCS,CAAWZ,KAC/CJ,IAAAC,cAAA,SAAOgB,KAAK,OAAOf,GAAG,WAAWgB,YAAY,aAC7ClB,IAAAC,cAAA,SAAOgB,KAAK,WAAWf,GAAG,WAAWgB,YAAY,aACjDlB,IAAAC,cAAA,UAAQgB,KAAK,SAASE,UAAU,OAAMnB,IAAAC,cAAA,YAAM,iB,2DCjC5D,0EAEac,EAAQV,UACjB,IACI,MAAMe,QAAiBC,MAAM,oDAAqD,CAC9EC,OAAQ,OACRC,KAAMhB,EACNiB,YAAa,YAGXC,QAAqBL,EAASM,OAEpC,IAAKN,EAASO,GACV,MAAM,IAAIC,MAAM,uBAAuBR,EAASS,QAGpD,MAAMC,EAAgBC,KAAKC,MAAMP,GAG7BK,EAAcG,MACdC,QAAQD,MAAM,eAAgBH,EAAcG,OAE5CC,QAAQC,IAAI,oBAAqBL,EAAcM,SAGrD,MAAOH,GACLC,QAAQD,MAAM,0BAA2BA,KAIpCrC,EAAeS,UACxB,IACI,MAAMe,QAAiBC,MAAM,gDAAqB,CAC9CC,OAAQ,MACRE,YAAa,YAGjB,IAAKJ,EAASO,GACV,MAAM,IAAIC,MAAM,uBAAuBR,EAASS,QAGpD,MAAMQ,QAAiBjB,EAASkB,OAEhC,OAAID,GAAYA,EAASJ,OACrBC,QAAQD,MAAM,0BAA2BI,EAASJ,QAC3C,GAIE,YAAThB,EACoB,YAAboB,EACS,WAATpB,GACa,WAAboB,EAKb,MAAOJ,GAEL,OADAC,QAAQD,MAAM,0BAA2BA,IAClC,IAIAM,W,kCC/Df,iIA+BeC,UAxBGA,KAGd7C,oBAAU,KACNC,YAAa,WAAWC,KAAKC,IAEzBA,GAAcC,SAAS,gBAE3BH,YAAa,UAAUC,KAAKC,IAExBA,GAAcC,SAAS,mBAE5B,IAGCC,IAAAC,cAACwC,IAAK,KACFzC,IAAAC,cAACyC,IAAM,KACH1C,IAAAC,cAAC0C,IAAG,CAACC,MAAM,UACX5C,IAAAC,cAACP,IAAK,SAQf,MAAMmD,EAAOA,IAAM7C,IAAAC,cAAA,aAAO","file":"component---src-pages-login-jsx-4e1d6c8d8598f9789a82.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { checkSession, login } from \"./../../helpers/data/dataLayer\";\nimport \"./Login.css\";\n\nconst Login = () => {\n    // LDAP login form\n    const submitForm = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('username', e.target.elements.username.value);\n        formData.append('password', e.target.elements.password.value);\n\n        login(formData);\n    }\n\n    // Check if user is logged in as student or teacher\n    useEffect(() => {\n        checkSession(\"STUDENT\").then(hasSession => {\n            // if student, go to dashboard\n            hasSession && navigate('/dashboard');\n        });\n        checkSession(\"DOCENT\").then(hasSession => {\n            // if teacher, go to admin panel\n            hasSession && navigate('/docent-dashboard');\n        });\n    }, []);\n\n    return (\n        <div id=\"loginWrapper\">\n            <form id=\"loginForm\" onSubmit={(e) => { submitForm(e) }}>\n                <input type=\"text\" id=\"username\" placeholder=\"Username\" />\n                <input type=\"password\" id=\"password\" placeholder=\"Password\" />\n                <button type=\"submit\" className=\"btn\"><span>Inloggen</span></button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","const api = \"https://api.interpol.sd-lab.nl/api\";\n\nexport const login = async (formData) => {\n    try {\n        const response = await fetch('https://api.interpol.sd-lab.nl/api/create-session', {\n            method: 'POST',\n            body: formData,\n            credentials: 'include' // Ensure cookies are included with the request\n        });\n\n        const responseText = await response.text(); // Read the raw response body as text\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const loginResponse = JSON.parse(responseText); // Parse the response text as JSON\n\n        // Do something with the login response, e.g., handle login success or error\n        if (loginResponse.error) {\n            console.error('Login error:', loginResponse.error);\n        } else {\n            console.log('Login successful:', loginResponse.message);\n        }\n\n    } catch (error) {\n        console.error('Error creating session:', error);\n    }\n}\n\nexport const checkSession = async (type) => {\n    try {\n        const response = await fetch(`${api}/check-type`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error checking session:', userData.error);\n            return false;\n        }\n\n        // If user is logged in, check what type of user is logged in\n        if (type === \"STUDENT\") {\n            return userData === 'STUDENT' ? true : false;\n        } else if (type === \"DOCENT\") {\n            return userData === 'DOCENT' ? true : false;\n        } else {\n            return false;\n        }\n\n    } catch (error) {\n        console.error('Error checking session:', error);\n        return false;\n    }\n}\n\nexport default dataLayer;","import React, { useEffect } from 'react';\nimport NoSSR from '../components/NoSSR/NoSSR';\nimport { checkSession } from \"./../helpers/data/dataLayer\";\nimport Login from \"../components/Login/Login\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\n\nconst LoginPage = () => {\n\n    // Check if user is logged in as student or teacher\n    useEffect(() => {\n        checkSession(\"STUDENT\").then(hasSession => {\n            // if student, go to dashboard\n            hasSession && navigate('/dashboard');\n        });\n        checkSession(\"DOCENT\").then(hasSession => {\n            // if teacher, go to admin panel\n            hasSession && navigate('/admin-panel');\n        });\n    }, []);\n\n    return (\n        <NoSSR>\n            <Layout>\n                <SEO title=\"Login\" />\n                <Login />\n            </Layout>\n        </NoSSR>\n    );\n}\n\nexport default LoginPage;\n\nexport const Head = () => <title>Interpol - Login</title>"],"sourceRoot":""}