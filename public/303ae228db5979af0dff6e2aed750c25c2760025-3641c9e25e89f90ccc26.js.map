{"version":3,"sources":["webpack:///./src/assets/icons/InterpolLogo.js","webpack:///./src/helpers/data/dataLayer.js","webpack:///./src/components/NoSSR/NoSSR.js"],"names":["InterpolLogo","React","createElement","id","viewBox","clipPathUnits","d","clipPath","transform","fill","api","login","async","response","fetch","method","body","formData","credentials","responseText","text","ok","Error","status","loginResponse","JSON","parse","error","console","log","message","checkSession","userData","json","type","getStudentData","getAdditionalStudentData","studentId","logout","data","navigate","NoSSR","_ref","children","isClient","setIsClient","useState","useEffect","Fragment"],"mappings":"6FAAA,yBAiBeA,IAfMA,IAEbC,IAAAC,cAAA,OAAKC,GAAG,cAAcC,QAAQ,uBAC1BH,IAAAC,cAAA,YACID,IAAAC,cAAA,YAAUC,GAAG,IAAIE,cAAc,kBAC/BJ,IAAAC,cAAA,QAAMI,EAAE,oDAGZL,IAAAC,cAAA,KAAGK,SAAS,UAAUC,UAAU,2CAC5BP,IAAAC,cAAA,QAAMO,KAAK,UAAUH,EAAE,4v8B,kCCXvC,0LACA,MAAMI,EAAM,qCAECC,EAAQC,UACjB,IACI,MAAMC,QAAiBC,MAAM,oDAAqD,CAC9EC,OAAQ,OACRC,KAAMC,EACNC,YAAa,YAGXC,QAAqBN,EAASO,OAEpC,IAAKP,EAASQ,GACV,MAAM,IAAIC,MAAM,uBAAuBT,EAASU,QAGpD,MAAMC,EAAgBC,KAAKC,MAAMP,GAGjC,OAAIK,GAAiBA,EAAcG,OAC/BC,QAAQD,MAAM,eAAgBH,EAAcG,OACrCH,EAAcG,QAErBC,QAAQC,IAAI,oBAAqBL,EAAcM,UACxC,GAEb,MAAOH,GACLC,QAAQD,MAAM,0BAA2BA,KAIpCI,EAAenB,UACxB,IACI,MAAMC,QAAiBC,MAASJ,EAAH,cAAqB,CAC9CK,OAAQ,MACRG,YAAa,YAGjB,IAAKL,EAASQ,GACV,MAAM,IAAIC,MAAM,uBAAuBT,EAASU,QAGpD,MAAMS,QAAiBnB,EAASoB,OAEhC,OAAID,GAAYA,EAASL,OACrBC,QAAQD,MAAM,0BAA2BK,EAASL,QAC3C,GAIE,YAATO,EACoB,YAAbF,EACS,WAATE,GACa,WAAbF,EAIb,MAAOL,GAEL,OADAC,QAAQD,MAAM,0BAA2BA,IAClC,IAIFQ,EAAiBvB,UAC1B,IACI,MAAMC,QAAiBC,MAASJ,EAAH,gBAAuB,CAChDK,OAAQ,MACRG,YAAa,YAEjB,IAAKL,EAASQ,GACV,MAAM,IAAIC,MAAM,uBAAuBT,EAASU,QAGpD,MAAMS,QAAiBnB,EAASoB,OAEhC,OAAID,GAAYA,EAASL,OACrBC,QAAQD,MAAM,sBAAuBK,EAASL,QACvC,GAGPK,IAGO,EAEb,MAAOL,GAEL,OADAC,QAAQD,MAAM,+BAAgCA,IACvC,IAIFS,EAA2BxB,UACpC,IACI,MAAMC,QAAiBC,MAAM,GAAGJ,gCAAkC2B,IAAa,CAC3EtB,OAAQ,MACRG,YAAa,YAEjB,IAAKL,EAASQ,GACV,MAAM,IAAIC,MAAM,uBAAuBT,EAASU,QAGpD,MAAMS,QAAiBnB,EAASoB,OAEhC,OAAID,GAAYA,EAASL,OACrBC,QAAQD,MAAM,sBAAuBK,EAASL,QACvC,GAGPK,IAGO,EAEb,MAAOL,GAEL,OADAC,QAAQD,MAAM,+BAAgCA,IACvC,IAIFW,EAAS1B,UAClB,IACI,MAAMC,QAAiBC,MAAM,gDAAiD,CAC1EC,OAAQ,OACRG,YAAa,YAGjB,IAAKL,EAASQ,GACV,MAAM,IAAIC,MAAM,uBAAuBT,EAASU,QAGpD,MAAMgB,QAAa1B,EAASoB,OAC5BL,QAAQC,IAAI,qBAAsBU,GAGlCC,mBAAS,UAEX,MAAOb,GACLC,QAAQD,MAAM,qBAAsBA,M,kCC1I5C,yBAgBec,IAdDC,IAAmB,IAAlB,SAAEC,GAAUD,EACzB,MAAM,EAACE,EAAS,EAACC,GAAeC,oBAAS,GAMzC,OAJAC,oBAAU,KACRF,GAAY,IACX,IAEED,EAIE3C,IAAAC,cAAAD,IAAA+C,SAAA,KAAGL,GAHD","file":"303ae228db5979af0dff6e2aed750c25c2760025-3641c9e25e89f90ccc26.js","sourcesContent":["import React from \"react\";\n\nconst InterpolLogo = () => {\n    return (\n        <svg id=\"desktopLogo\" viewBox=\"0 0 140.979 128.845\">\n            <defs>\n                <clipPath id=\"a\" clipPathUnits=\"userSpaceOnUse\">\n                <path d=\"M28.096 91.334h463.808v722.459H28.096V91.333z\"/>\n                </clipPath>\n            </defs>\n            <g clipPath=\"url(#a)\" transform=\"matrix(1.25 0 0 -1.25 -301.558 987.127)\">\n                <path fill=\"#00457d\" d=\"M283.278 726.418c.304.593.503 1.005.711 1.487.111-.07.245-.159.42-.249.174-.09.325-.148.447-.196a22.8 22.8 0 0 1-.795-1.444l-.37-.72a22.464 22.464 0 0 1-.71-1.487c-.11.071-.246.16-.42.25-.175.09-.326.147-.448.196.271.45.491.851.795 1.444l.37.72zm2.735.452c.078-.047.158-.088.242-.119.084-.03.172-.049.262-.062.486-1.18.97-2.35 1.472-3.537.32.89.867 2.413.918 2.68.078-.048.158-.09.242-.12.084-.03.172-.049.262-.062-.675-1.597-.942-2.34-1.477-3.83a.934.934 0 0 1-.448.161 66.731 66.731 0 0 1-1.469 3.598c-.162-.416-.329-.88-.479-1.3-.322-.896-.418-1.215-.475-1.429a1.546 1.546 0 0 1-.253.123c-.084.03-.178.051-.268.064.086.153.69 1.567 1.1 2.71.18.503.28.852.371 1.123m5.068-2.58c.045.221.087.43.086.516-.227.046-.724.11-1.082.14.035.084.063.163.081.251.018.087.022.171.022.262.527-.124.787-.189 1.51-.335.724-.146.988-.187 1.487-.27a1.335 1.335 0 0 1-.08-.25 1.34 1.34 0 0 1-.023-.264c-.307.105-.79.24-1.023.286-.028-.08-.07-.289-.115-.51l-.295-1.458a23.385 23.385 0 0 1-.279-1.625c-.126.038-.28.087-.472.126-.193.04-.354.053-.484.067.138.506.241.953.373 1.606l.294 1.457zm2.841-1.173c.056.664.083 1.121.092 1.646.35-.036.702-.09 1.052-.119.581-.049 1.08-.08 1.241-.075-.018-.07-.036-.14-.045-.248-.01-.124-.003-.178.001-.269-.448.068-1.155.17-1.333.185-.066-.43-.102-.856-.139-1.289.516-.032.897-.052 1.35-.067a1.347 1.347 0 0 1-.053-.264c-.006-.065.002-.119.01-.245-.449.074-.89.13-1.342.167-.02-.249-.048-.503-.07-.758a14.89 14.89 0 0 1-.045-.742 11.62 11.62 0 0 1 1.364-.038c-.02-.082-.036-.14-.047-.265-.01-.124-.004-.184.002-.256-.213.024-.489.071-1.034.117-.966.082-1.128.078-1.259.077.08.518.13.974.187 1.637l.068.806zm4.438-.759h-.054l.008-.245c.021-.666.048-1.123.1-1.645-.13.008-.292.02-.488.014s-.356-.029-.487-.046c.02.525.016.983-.005 1.65l-.026.807a22.692 22.692 0 0 1-.1 1.645c.131-.007.292-.02.488-.014.214.007.47.045.873.058.601.02.823-.027 1.036-.169a.927.927 0 0 0 .411-.772c.02-.577-.303-.956-.887-1.124.402-.659.876-1.323 1.332-1.98-.179.006-.358.018-.536.012-.179-.006-.363-.029-.54-.047l-1.125 1.856zm-.096 1.872c.006-.54.017-1.076.034-1.618.048-.004.09-.008.131-.007.523.016.8.317.782.875-.023.703-.299.771-.947.75m3.18-1.11a22.845 22.845 0 0 1-.302 1.62c.131.01.293.016.487.046.27.042.571.12.853.164.552.086.854.043 1.06-.08.28-.168.435-.39.49-.737.14-.9-.439-1.358-1.314-1.495l-.3-.047c.092-.587.19-1.174.323-1.755-.13-.009-.292-.016-.486-.046s-.35-.073-.478-.105a23.44 23.44 0 0 1-.207 1.635l-.126.8zm.926 1.47c-.094-.016-.182-.03-.246-.046.081-.553.161-1.106.247-1.653.394.062.865.244.746 1.002-.094.6-.412.748-.747.696m4.18 1.401c1.203.378 2.357.018 2.787-1.349.354-1.123-.26-2.32-1.526-2.718-1.197-.377-2.355-.067-2.8 1.351-.352 1.118.223 2.302 1.54 2.716m.084-.329c-.777-.244-.985-1.17-.678-2.146.38-1.208 1.068-1.453 1.703-1.253.681.214 1.098.97.71 2.205-.309.982-1.003 1.424-1.735 1.194m3.651-.112a22.535 22.535 0 0 1-.767 1.46c.122.046.274.1.451.187.176.086.312.173.424.241.198-.486.39-.902.682-1.5l.355-.727c.194-.395.398-.798.54-1.073.4.196.801.418 1.188.668.026-.08.042-.139.096-.25.055-.114.092-.162.134-.22-.195-.089-.456-.19-.948-.43-.87-.427-1.006-.514-1.119-.582-.198.486-.388.902-.68 1.501l-.356.725zm-28.242 40.612c1.015.597 2.143.512 2.822-.643.558-.949.25-2.169-.819-2.797-1.012-.595-2.13-.556-2.835.642-.555.944-.28 2.144.832 2.798m.146-.282c-.657-.386-.65-1.273-.167-2.097.6-1.02 1.28-1.099 1.815-.784.575.34.797 1.113.183 2.158-.488.83-1.213 1.087-1.83.723m3.432.313c-.245.573-.424.962-.646 1.398.116.038.261.082.43.154.168.072.3.146.408.205.161-.463.32-.86.564-1.433l.297-.696c.245-.572.423-.96.646-1.398-.117-.038-.26-.08-.43-.153-.168-.073-.3-.147-.408-.205-.162.463-.32.86-.564 1.433l-.297.695zm1.842.763c-.19.593-.332.997-.513 1.453.12.027.27.057.443.113.244.078.511.192.765.273.497.16.782.163.99.078a.898.898 0 0 0 .558-.61c.26-.81-.209-1.316-.998-1.568l-.27-.087c.17-.529.344-1.057.551-1.575-.12-.026-.268-.057-.443-.112-.175-.056-.313-.118-.426-.166-.117.476-.237.888-.427 1.48l-.23.721zm.643 1.49a2.84 2.84 0 0 1-.22-.077c.154-.499.307-.998.465-1.49.355.113.764.35.545 1.032-.173.54-.488.631-.79.535m5.895-1.576a1.84 1.84 0 0 1-.034-.487c-.26-.207-.62-.365-1.07-.449-1.267-.237-2.164.416-2.357 1.45-.282 1.507.632 2.278 1.78 2.492.383.071.885.046 1.165-.06a2.03 2.03 0 0 1-.022-.58l-.076-.015c-.337.288-.643.383-1.03.311-.586-.11-1.152-.74-.936-1.9.21-1.126.96-1.444 1.588-1.326.35.065.724.304.913.594l.08-.03zm7.69 1.567c.09.616.141 1.041.18 1.53.12-.029.264-.068.446-.094.181-.027.332-.032.455-.039a21.464 21.464 0 0 1-.269-1.517l-.109-.747a20.9 20.9 0 0 1-.18-1.53c-.12.03-.266.067-.448.094-.18.027-.332.032-.455.04.104.478.178.9.27 1.516l.11.747zm4.545-2.65a1.877 1.877 0 0 1-.235-.428c-.323-.079-.717-.07-1.159.04-1.25.316-1.792 1.284-1.534 2.303.376 1.487 1.528 1.804 2.66 1.518.377-.095.822-.328 1.032-.542-.115-.16-.2-.339-.263-.518l-.075.02c-.185.401-.423.616-.806.713-.576.146-1.355-.19-1.644-1.334-.28-1.11.267-1.713.887-1.869.345-.087.784-.026 1.077.158l.06-.06zm1.29 1.28c.227.58.374.982.522 1.45.11-.055.243-.126.414-.193.238-.094.517-.174.765-.272.487-.19.71-.369.817-.566a.9.9 0 0 0 .046-.825c-.312-.79-.995-.887-1.765-.583l-.264.104a24.061 24.061 0 0 1-.57-1.569c-.11.056-.243.126-.414.193-.17.067-.316.107-.434.141.21.443.377.838.605 1.417l.277.703zm1.44.748c-.082.032-.16.063-.219.08-.196-.484-.393-.969-.582-1.45.346-.136.812-.212 1.075.455.208.528.021.798-.274.915m4.183-1.589c1.02-.59 1.5-1.615.826-2.774-.553-.952-1.767-1.282-2.839-.659-1.014.59-1.53 1.582-.832 2.784.55.947 1.73 1.297 2.845.65m-.173-.266c-.659.382-1.429-.058-1.909-.885-.594-1.024-.33-1.653.21-1.966.575-.335 1.36-.147 1.968.901.483.832.351 1.59-.269 1.95m-20.67-4.149c.44.581 1.526.517 1.9 1.165-.998-.147-1.702-.586-2.33-1.103.08-.084.266-.06.43-.062m1.715.552c-.664-.153-1.518-.117-1.532-.919.182-.004.311.181.43.061-.247-.55-.797-.798-1.165-1.225-.059-.74-.85-1.066-.613-1.9.522.132.661.646 1.286.674.19 1.057 1.802.691 2.268 1.471.024.147-.279-.034-.184.184.201.003.234.174.49.123.22.637.83.886.981 1.592h-.429c.011.174.291.077.245.307-.589.182-1.45.057-1.777-.368m-3.248.245c-.219-.026-.335-.154-.429-.306.088-.015.104-.1.184-.123.04.181.396.25.245.43m-.245-1.104c.232-.026.287.121.43.184.043.167-.123.124-.123.245.36.09.427.472.673.674-.45-.06-.608-.412-.919-.612.2-.146-.056-.347-.06-.49m1.47 1.041c-.188.084-.483-.25-.49-.55.321.024.468.223.49.55m-1.899-.368c.002.106-.048.157-.124.184-.016-.125-.228-.058-.245-.184.08-.084.29-.084.37 0m.243-.122c-.214-.05-.287-.244-.368-.429.204.062.362.17.368.43m13.66-.553c.411-.044.646.09.734.368-.249.101-.569-.085-.797-.062-.05-.173.087-.158.062-.306m-12.433.245c-.262.198-.543.058-.49-.367.325-.039.33.242.49.367m13.046-.612c.231-.047.293.074.49.061v.245c-.145-.019-.23-.097-.429-.06.013-.117-.069-.137-.06-.246m-3.923-.246c.016.201-.073.295-.246.307.035-.15.053-.316.246-.307m-6.489-1.103c-.124-.1-.199-.25-.184-.49.393-.083.846-.033.858.43-.302.192-.445-.168-.674.06m1.402-2.266c-.037.151.224.477-.06.49-.726-.423.268-1.048-.123-1.655.266.061.49.165.735.246 0 .488-.484.495-.552.92m-.673-.43h-.306c-.03-.14-.122-.314 0-.43h.245c-.088.267.208.283.061.43m18.69-2.574c-.269.175.078.591-.185.735-.008-.175-.42.054-.429-.123.267-.102.313-.747.613-.612m.735-2.758c.08.366-.193.38-.184.674.474.408.117 1.14-.244 1.41.455-.716-.716-1.887.428-2.084m-13.603 1.348c-.229-.08-.423.183-.552 0 .107-.084.49-.24.552 0m.858-.245c.044.212-.215.22-.306.123.021-.216.16-.159.306-.123m12.44-3.37c.098.308-.043.471.121.858-.167-.044-.123.122-.244.122-.069-.197-.105-.426-.185-.613.105-.12.144-.306.307-.367m-30.019-.49c.308-.122.365.097.674.122-.005.316-.335.445-.612.307-.32.17-.447.533-.675.796-.254.01-.473-.016-.613-.122.358-.06.618-.238.735-.674.158.056.348.1.43-.06-.009-.152-.01-.297.061-.369m-.55.245c-.045-.227.095-.27.305-.245-.012.172-.107.261-.306.245m29.161-.43h.367c.054.321-.096.436-.367.43-.122-.115-.03-.29 0-.43m1.531-.306a3.45 3.45 0 0 1 .613-1.592c.055.474.078 1.671-.613 1.592m.613-2.757c.402-.024.506.8.245 1.042-.154-.292-.455-.563-.245-1.042m-4.964.92c.03-.256-.286-.604 0-.735.15.116.241.29.307.49-.176.007-.107.26-.307.244m4.107-3.369c.115-.015.135.068.244.061-.167.712.538 1.303.245 2.145h-.183c-.039-.414-.578-.389-.675-.859-.086-.425.118-1.03.37-1.347m.918 1.286c-.524-.314-.529-1.146-.613-1.899.29-.046.402.087.551.183-.134.777.036.976.184 1.655-.013.048-.05.071-.122.061m.796-1.042c-.06.391.152.684-.184.981-.147-.335-.038-.587-.122-.92.147.026.133-.11.306-.06m1.532.245c-.053.253-.145.467-.367.551.038-.28.036-.462.367-.55m-1.042-2.269c.343.005.227.467.613.43.24-.11.096-.6.368-.675.183.635-.324 1.223-.245 2.145-.416.072-.67.104-.98.368.111-.769.508-1.474.244-2.268m.981.981c.115-.05.224-.103.367-.123-.09.29.075.59.062 1.103-.117.027-.154.132-.306.122-.127-.528.11-.687-.123-1.102m-1.47.245c-.04.082-.132.114-.246.122-.25-.204.273-.484.245-.122m-1.409-.858c-.352.294-.662 1.03-1.226.736.084-.594.653-.807 1.226-.736m.551 0c.193-.03.24.087.368.123-.013.17-.195.173-.246.306-.08-.102-.16-.206-.122-.429m-.367-.123v-.245c.154-.06.984-.134.796.245-.194-.096-.574.042-.796 0m3.8 0c-.149.026-.135-.11-.307-.06.087-.272.034-.447 0-.737.302.198.13.49.306.797m-12.807-.98c-.145.263.07.887-.307.92-.193-.625-.728-.907-1.224-1.227-.076-.8-.267-1.44 0-2.144.612.511.956 1.29 1.102 2.267.131.073.342.066.43.184m7.466-2.105c-.229-.412-.576-1.125-.629-1.462-.1-.634-.155-.262-.155-.979.644-.266.63.23 1.344.093.6-.412.435-1.139.306-1.777.767.091 1.087.67 1.533 1.041.618.646 1.696 2.167 1.245 3.49.404.677.382 1.882.185 1.882 0 0-.335-1.038-.565-1.29 0 0-.222.36-.498.33.103.412.451.507.245 1.042-.143 0-.286-.037-.472-.082-.452-.849-.55-.549-1.12-.777-.084-.772-.929-1.102-1.419-1.51m-7.467 1.246c.014-.116-.069-.136-.06-.245.16-.018.262.022.244.184-.078.003-.085.078-.184.061m-27.568-.98v.245c-.193-.03-.25.144-.307-.062.11-.054.08-.248.307-.184m35.963-4.84c-.188-.045-.223.063-.368.061-.067-.279-.385-.31-.368-.674.45.001.471.428.736.613m-18.628 21.753c-.004-.309.432-.18.552-.367.08-.449-.189-.547-.368-.736a2.84 2.84 0 0 0-.674.245c-.45-.374-.525-1.228-.06-1.655.31.096.877.244 1.102.062.092.152.117.372.123.613.623.163.994.973 1.715.92.5-.038.838-.582 1.164-.982.043-.227-.105-.263-.06-.49.232.052.317.254.427.43-.129.502-.534.73-.673 1.225.35-.096.531-.344.858-.307-.175-.888.717-.9.674-1.47.336.133.168.771.735.674-.023-.473.19-.708.428-.92.318.01.35.306.736.245.231-.218.08-.818.123-1.225-.21-.33-.616-.083-.859-.368-.339.01-.403.292-.673.368-.91-.562-1.369.341-2.329.368-.143.204-.116.578-.367.675-.43-.077-.892-.202-1.226.06-.426-.288-1.243-.374-1.838-.306-.78-.383-.924-1.405-1.838-1.654-.186-.97-1.543-2.505-.798-3.494.176-.23.393-.288.49-.55.104-.278-.073-.593.185-.859.756-.522 2.311-.668 3.186-.122.693-.245 1.21-.124 1.961-.246-.038-.303.138-.392.183-.612-.129-.25-.278-.384-.305-.614-.1-.876.826-1.129.92-2.143.074-.824-.487-1.737-.49-2.329-.004-.234.215-.482.244-.735.07-.63-.29-1.478.306-1.839.031-.5.19-.874.428-1.164.485.331 1.007.236 1.472.43.83.343 1.016 1.376 1.654 1.898-.194 1.556 1.406 1.962 1.287 3.31-.026.29-.234.435-.306.795.631 1.453 1.685 2.483 2.267 3.984-.255.292-.815-.053-1.287.061-1.079.924-1.515 2.49-2.084 3.922.504-.017.668-.669.613-1.04.408-.759.973-1.358 1.226-2.269.727.191 2.073.625 2.206 1.348.022.116-.02.601-.06.735-.076.242-.205.362-.43.552-.089-.158-.166-.326-.368-.367-.379.32-.837.872-.735 1.47.56.088.452-.488.674-.735.308-.042.284.245.613.184.102-.207.204-.409.306-.613.73.455 1.482.136 1.47-.797.066-.14.186-.223.368-.245.326-1.063.914-1.865 1.41-2.758.207.16.151.585.366.736-.532.841.267 1.654.736 2.206.355-.177.407-.655.858-.736a.402.402 0 0 0-.06-.306c.102-.12.284-.164.49-.184.106-.629.135-1.334.551-1.654-.082-.49.034-.845.122-1.348-.179-.016-.188.138-.367.122.28-.883.386-1.943.98-2.513.205.968-.344 1.444-.55 2.268.33-.122.267.491.243.674-.063.495-.707 1.182-.49 1.655.36.011.155-.539.368-.675 1.262.484.013 1.712-.429 2.268.108.627 1.038.431 1.226.981-.042.573-.166.605 0 1.102-.043.244-.29.281-.368.491.174 1.093-.536 1.63-.797 2.083.567.306.496-.685.981-.858.268.215.012.836-.307.858-.05.814-.614 1.937-.796 3.003-.5.113-.85.374-1.042.796-.742-.089-.792.516-1.164.797-.07.201.081.705-.06.98.495-.197.712-.675.917-1.164.584-.419 1.288-.715 1.84-1.164-.035.253-.406.697-.552 1.041-.638.078-.605.826-1.348.796-.194.257.215.877-.097 1.282-.362.472.036.924.018 1.16-.029.388-.704.36-1.178.714-.186.138-1.286.107-1.23.08-.256.051-.377-.413-.578-.417-.11.133-.18.31-.367.368-.372-.139-.578-.444-.797-.735-.552.415-1.172.3-1.409-.306-.65.02-1.26.64-1.838.183-.219.406-.757.782-1.165.49.005-.26.103-.429.062-.735-.099-.105-.257-.152-.49-.123-.073-.255-.06-.593-.307-.674-.113.118-.112.05-.062.245-.104.081-.34-.048-.489.062-.09.232.274.012.184.245-.083.087-.273.162-.368.061.2-.662-.509-1.059-.735-1.654-.169.315.136.622.244.857-.303.388-1.085.05-1.348.552-1.4.094-1.064-1.55-1.96-1.96.115-.09.007-.402.123-.49.365-.02.464.227.796.245.171-.156.088-.566.306-.675.135.07.25.16.491.123-.11.297-.222.594-.368.857.201.187.2.577.49.674.52-.58.613-2.229-.55-2.328-.173.257-.359.292-.614.551-.079-.186-.127-.404-.246-.55-.454-.138-.916-.269-1.103-.675-.442.295-.61-.192-1.04-.245m8.823-.735c.121-.186-.008-.62.122-.797.005-.22.401-.049.491-.184-.008-.318.056-.757.061-1.225-.577-.105-.848.232-1.042.735-.319.827-.65 1.824.368 1.471m-3.125.122c.287-.019.247-.365.49-.429.246.02.242.29.552.245.121-.307.223-.634.613-.674.026-.23-.122-.287-.185-.429-.538.35-1.06-.08-1.592.062.327.253.016.888.122 1.225m12.316-23.1c.035-.046.287-.144.425-.115.312.065.484.332.76.575.08.074.297.038.362.111.057.06-.022.038.082.13.1.117.157.07.086.34a8.24 8.24 0 0 1-1.715-1.042m-33.083 18.812c-.392-.953.53-1.463.552-2.389.232-.089.117.168.306.122.062-.223.214-.358.245-.613.141-.103.47-.02.552-.184-.01-.324-.105-.506 0-.797.156-.129.47-.102.674-.183.016-.189.132-.275.184-.43-.192-.318-.305-.716-.49-1.04.202-.526-.049-1.262.06-1.839.125-.657.857-1.27.858-2.206.984-.304.955-1.62 1.471-2.39-.06-1.208.646-1.824.43-3.002.314-.586.373-1.344.918-1.777.562-.447 1.675-1.808 1.471-1.287-.127.153-.776 1.735-.735 2.757.025.627.421 1.303.674 1.961.452 1.182.09 1.853 1.06 2.205.011.005.144.024.165.063.021.038-.034.071-.048.106-.526 1.284.745 2.26.538 3.203-.12.548-.559 1.208-.68 1.318-.122.111-.464-.012-.974.03-.332.627-1.11.81-1.104 1.776-.308.202-.74.28-.735.797-.505-.097-.627.5-1.04.674-.26-.068-.428-.227-.614-.368-.417.217-.8.066-1.164-.184-.222.043-.334.198-.49.307.006.561.152.998-.184 1.348.087.44.324.824 0 1.103-.332.045-.2-.372-.613-.246-.262.704.691 1.202.613 1.961.382.087.876.065 1.225.185.25-.138.25-.722 0-.859.054-.089.092-.194.246-.183.404.297.215.76.367 1.164.153.407.755.716 1.041 1.164.085.132.048.332.123.43.046.057.253.052.368.183.067.075.072.263.122.306.29.25.854.414 1.226.613.25.133.405.302.797.367.243.37.1 1.125.673 1.165-.068-.289.02-.374-.06-.674.79.221.402 1.261 1.041 1.655-.172.717.355.954.613 1.408-.198.165-.829.172-.55.613.34.117.215-.232.427-.245.41.041.41.49.674.674.217.033.151-.217.368-.184.11.362.081.86.245 1.165-.742.104-.706-1.088-1.593-1.042-1.085-.692-1.343-2.212-2.329-3.003-.076.428-.343.957-.306 1.287.024.205.348.805.552.981.165.143.485.127.674.245.353.22.445.557.735.674 1.115-.083 1.485.692 2.022 1.41-.374.3-.772-.049-1.103-.246.042.166-.126.12-.184.184-.203.187.244.322.061.49-.266-.428-.97-.417-1.347-.735-.106-.216.134-.68-.307-.674-.179.196.14.268.184.43-.44.417-.957.384-1.47.06-.018.241.261.187.245.43-.148.076-.326.123-.43.244-.334-.143-.627-.56-1.04-.429.005.046-.268.172-.475.26a14.297 14.297 0 0 1-.342-.194c-.054-.28-.142-.697-.104-.924-1.056.036-1.192-.85-2.083-.98.283-.483 1.09.455 1.532 0-.7-.934-1.115-2.153-2.145-2.758-.222-.922-.95-1.336-1.47-1.96-.108-1.025-.27-1.67-.613-2.39.152-.379.18-.882.49-1.103m8.641 9.498c.305-.065.775.046.885.176-.11-.13-.58-.242-.886-.177l.001.001m27.252-26.232c-.077.008-.152-.06-.339 0-.12.04-.156.215-.178.188-.02-.027.04-.29.018-.357-.066-.212-.138-.332-.412-.396.115-.2.112-.387.06-.51.48.453.851.907.851 1.075m9.678-16.037-3.36 9.085c1.794 1.416 3.02 3.04 3.633 3.963l.316.476-.565.084c-.074.011-1.172.165-2.862-.014 1.981 2.172 3.112 4.592 3.283 7.051l.054.8-.637-.487c-.007-.005-.619-.464-1.849-.877 2.114 3.18 2.943 6.454 2.531 9.977l-.108.924-.545-.753c-.013-.017-.662-.907-1.669-2.058.877 2.538 2.005 7.682-1.463 11.382l-.244.26-.264-.24c-.023-.02-.48-.443-1.045-1.417-.46.765-.99 1.383-1.336 1.787a9.99 9.99 0 0 0-.248.295c-.122.152-.248.303-.372.45-.397.475-.772.924-.897 1.3l-.216.647-.416-.54c-.03-.042-.6-.807-.869-2.779a21.714 21.714 0 0 1-2.728 2.648l3.657 5.263-.292.208c-4.786 3.416-10.57 5.46-16.75 5.926.156 1.394.35 1.92.44 2.097 1.684.043 2.843.112 3.386.15.032-.5.071-.962.074-.995l.028-.332h1.836l.032.328c.002.024.032.332.06.747a1 1 0 0 1 .471-.119c.635 0 1.151.604 1.151 1.346 0 .742-.516 1.345-1.15 1.345-.169 0-.329-.042-.473-.118-.027.415-.057.724-.059.747l-.032.328h-1.836l-.028-.332a49.529 49.529 0 0 1-.074-.995c-.615.041-2.016.123-4.018.165-.09.25-.296 1.115-.296 3.76v6.31l.394.032.332.028v1.783l-.328.032a37.04 37.04 0 0 1-1.437.107c.086.158.135.335.135.522 0 .666-.618 1.21-1.378 1.21-.76 0-1.379-.544-1.379-1.21 0-.187.05-.364.136-.522a37.377 37.377 0 0 1-1.438-.107l-.327-.032v-1.783l.331-.028.394-.032v-6.31c0-2.645-.206-3.51-.296-3.76a90.135 90.135 0 0 1-4.018-.165c-.032.501-.07.963-.074.995l-.028.332h-1.836l-.032-.328c-.002-.023-.032-.332-.059-.747a1.007 1.007 0 0 1-.472.118c-.634 0-1.15-.603-1.15-1.345s.516-1.346 1.15-1.346c.168 0 .328.043.472.12.027-.416.057-.724.06-.748l.031-.328h1.836l.028.332c.003.033.042.494.074.994a81.174 81.174 0 0 1 3.387-.149c.09-.178.284-.706.44-2.108-6.206-.493-12.003-2.577-16.783-6.04l-.289-.209 3.611-5.173a21.68 21.68 0 0 1-2.683-2.612c-.269 1.971-.838 2.737-.869 2.778l-.416.541-.216-.647c-.125-.376-.5-.825-.897-1.3-.124-.147-.25-.298-.372-.45a9.99 9.99 0 0 0-.248-.295c-.346-.404-.876-1.022-1.336-1.787-.565.974-1.022 1.396-1.045 1.417l-.264.24-.244-.26c-3.468-3.7-2.34-8.844-1.463-11.382-1.007 1.151-1.656 2.041-1.669 2.058l-.545.753-.108-.924c-.412-3.523.417-6.798 2.531-9.977-1.23.413-1.842.872-1.849.877l-.637.486.054-.799c.171-2.459 1.302-4.879 3.283-7.05-1.69.178-2.788.024-2.862.013l-.565-.084.316-.476c.614-.924 1.84-2.547 3.633-3.963l-3.36-9.085h-2.926v-1.979h1.185c2.132-1.43 6.415-3.76 11.71-3.76h.001c5.292 0 9.57 2.325 11.705 3.76h1.2v1.98h-2.894l-.694 1.87a35.313 35.313 0 0 1 6.414-1.004l.23-6.755 2.115-3.134 2.116 3.134.23 6.755c2.19.14 4.336.478 6.414 1.004l-.694-1.87h-2.894v-1.98h1.2c2.135-1.435 6.413-3.76 11.705-3.76h.002c5.294 0 9.577 2.33 11.708 3.76h1.186v1.98h-2.926zm-18.934 57.203c.231 0 .426-.284.426-.62s-.195-.62-.426-.62c-.23 0-.425.284-.425.62s.195.62.425.62m-1.73.957h.505a21.18 21.18 0 0 0 .075-1.577c0-.55-.044-1.196-.075-1.576h-.506c-.033.43-.085 1.172-.085 1.576 0 .403.052 1.146.085 1.577m-16.464-2.197c-.23 0-.426.284-.426.62s.195.62.426.62c.23 0 .425-.284.425-.62s-.195-.62-.425-.62m1.731-.956h-.506c-.03.38-.075 1.026-.075 1.576s.044 1.196.075 1.577h.506c.033-.43.086-1.173.086-1.577 0-.404-.053-1.146-.086-1.576m34.624-55.007h-8.838v3.407c1.407.147 3.06.703 4.851 2.09l.627.485-.777.157a6.487 6.487 0 0 0-1.429.501c-.147.073-.36.215-.609.38l-.302.197c1.177.271 2.154.655 2.905 1.152.13.085.256.173.381.261l3.191-8.63zm-11.95 2.602c.511 0 .934.377 1.007.87a7.942 7.942 0 0 1 1.295-.108l.085.001v-3.365h-8.87l.778 2.1a33.302 33.302 0 0 1 4.703 1.71 1.02 1.02 0 0 1 1.001-1.207m-.47 1.02a.411.411 0 1 0 .822 0 .411.411 0 0 0-.823 0m1.28.62a1.016 1.016 0 0 1-.33.28c.474.243.943.496 1.405.762a.392.392 0 0 1 .154-.04c.485-.035.97-.007 1.445.072a5.02 5.02 0 0 1 1.381.43c-.486.08-.95.107-1.412.137l-.52.032.188.118-1.048 1.783c1.301-.083 2.487-.862 3.304-1.403a7.47 7.47 0 0 1 .684-.423c.303-.15.605-.268.863-.355-2.513-1.713-4.642-1.707-6.114-1.394m.198 7.53a1.02 1.02 0 0 1-.919-.58l-.359.61c2.416 1.734 4.423 3.876 5.874 6.302a5.03 5.03 0 0 0-.158-1.963h.002c-.544-1.972-2.138-3.687-3.554-4.885a1.018 1.018 0 0 1-.886.515m.412-1.067a.412.412 0 1 0-.824 0 .412.412 0 0 0 .824 0m.648-.794a.411.411 0 1 0 .001-.823.411.411 0 0 0 0 .823m9.971 3.028c-.789-1.09-2.155-2.705-4.06-3.965-.83-.549-1.984-.954-3.426-1.204a7.045 7.045 0 0 1-1.557.63l.51.272 1.863 1.012 1.882 1.03c-.728-.068-1.434-.267-2.115-.51a14.88 14.88 0 0 1-1.976-.894c-.059-.03-.116-.065-.174-.098 0 .396-.226.738-.555.907a16.88 16.88 0 0 0 3.8 1.901c2.593.921 4.791.965 5.808.92m.328 7.041c-.43-2.855-2.17-5.106-3.646-6.552a17.258 17.258 0 0 1-3.438-.992 21.641 21.641 0 0 1 1.747 1.733c.605.686 1.191 1.406 1.63 2.22-.675-.625-1.352-1.22-2.03-1.817l-2.036-1.78-.502-.43c.928 1.044 1.711 2.25 2.071 3.574.1.173.198.34.303.498.233.31.458.581.678.824.456.047.821.394.898.84.113.088.228.171.343.247.028-.002.056-.004.084-.004.382 0 .713.21.89.52.34.141.698.26 1.091.371.854.243 1.49.524 1.917.748m-5.993-2.48.01-.01-.01-.01v.02m.336.841a.412.412 0 1 0 .824-.001.412.412 0 0 0-.824.001m1.423 1.02a.411.411 0 1 0 .823.001.411.411 0 0 0-.823 0m2.854 7.761c.686.75 1.252 1.436 1.64 1.928.171-3.273-.825-6.333-3.024-9.323l-.16-.058a1.02 1.02 0 0 1-.41.538c.37.532.705 1.088.993 1.67.2.41.38.83.52 1.264.135.434.247.881.27 1.334-.354-.83-.806-1.58-1.284-2.317a31.117 31.117 0 0 0-1.277-1.8 1.022 1.022 0 0 1-.806-.998l.001-.022-.084-.1a1.017 1.017 0 0 1-1.163-.38 6.304 6.304 0 0 1-.059.214 17.98 17.98 0 0 1 1.774 5.163 22.469 22.469 0 0 1 1.965 1.738 1.02 1.02 0 0 1 1.104 1.149m-1.234.05a.411.411 0 1 0 .823.002.411.411 0 0 0-.823-.002m-.535 11.59c3.06-3.61 1.705-8.61.897-10.763a1.02 1.02 0 0 1-.913-1.674c-.36-.35-.74-.697-1.129-1.028a17.435 17.435 0 0 1 .111 2.35c.307.441.556.921.751 1.415.286.722.467 1.477.565 2.235.095.76.114 1.524.023 2.283-.208-.735-.38-1.46-.58-2.17a20.317 20.317 0 0 0-.682-2.08c-.048-.122-.1-.242-.15-.36-.067.69-.173 1.37-.318 2.038.806 1.33 1.124 2.665 1.066 4.323-.026.737-.234 1.432-.522 2.06.35.667.671 1.114.881 1.37m-4.474 2.321c.192-.282.43-.566.675-.86.121-.144.243-.29.361-.438.07-.087.16-.19.264-.314.708-.826 2.027-2.365 2.09-4.165.043-1.22-.14-2.25-.603-3.244a18.113 18.113 0 0 1-1.198 3.118c.04.343.037.685-.004 1.022a4.342 4.342 0 0 1-.245 1.01c-.126.325-.292.646-.552.91a9.538 9.538 0 0 1-.004-1.028c.008-.17.02-.339.034-.508-.406.671-.853 1.32-1.34 1.945.104 1.25.335 2.068.522 2.552m-1.244 5.968-3.223-4.637c-3.553 2.714-8.068 4.517-13.044 4.982v.482c0 2.111.068 3.645.161 4.761 5.927-.445 11.482-2.37 16.106-5.588m-18.806 23.73c.354 0 .652-.222.652-.484s-.298-.484-.652-.484c-.354 0-.653.222-.653.484s.3.483.653.483m-2.283-2.259v.454c.496.042 1.465.113 2.283.113.817 0 1.787-.07 2.282-.113v-.454c-.559-.044-1.687-.127-2.282-.127-.596 0-1.724.083-2.283.127m4.102-10.777h-.714c-.71.007-1.5.007-2.21 0h-.714c.142.583.262 1.672.262 3.738v6.258a26.21 26.21 0 0 1 1.557-.07c.402 0 1.017.033 1.557.07v-6.258c0-2.065.12-3.155.262-3.738m-8.375-1.412v.502c.738.05 2.67.161 5.453.185h2.205a96.926 96.926 0 0 0 5.453-.185v-.502c-.816-.057-3.11-.189-6.555-.189-3.446 0-5.74.132-6.556.19m8.985-.893c-.4-1.189-.615-3.785-.615-7.562v-.423c-.485.032-.974.05-1.467.056v7.907c.753.002 1.448.01 2.082.022m-4.859 0c.626-.012 1.311-.02 2.052-.022v-7.907a27.308 27.308 0 0 1-1.437-.054v.421c0 3.777-.215 6.373-.615 7.562m-16.408-8.51c4.62 3.263 10.185 5.227 16.138 5.698.093-1.115.16-2.646.16-4.75v-.479c-5.01-.462-9.553-2.282-13.12-5.02l-3.178 4.551zm18.822-.14c12.564 0 22.786-8.738 22.786-19.479 0-.673-.04-1.34-.119-1.996-.112-.28-.67-.417-.484-.786.097.208.374.433.464.636-.866-6.724-5.752-12.428-12.552-15.313h-.002.001a3.007 3.007 0 0 0-.1-.043c-.155-.016-.392.002-.382.172l-.286.16c-.102.244-.539.2-.572.514-.566.187-.523.213-1.032.301-.422.074-.75.211-1.18.252-.446.042-1.473-.56-2.004-.648-.195-.033-.165.065-.305.21-.617.635-1.806.252-3.09-.287-.348-.146-.83-.44-1.242-.433-.907.017-1.507.605-2.719.661-.369.017-.066-.9-.2-1.277-.187.074-.73.311-.73.311s-.546.051-.758.096c-.243.052-.417.12-.456.074-.343-.41-.65.698-1.287.735-.292.412-.838.843-1.277 1.322-.249.27-.797 1.583-.814 1.207-.048-.998.908-1.452.858-2.223.006.095-.214.064-.198.04-.005-.1-.272-.178-.224-.407-.297-.053-.95-.06-1.047-.226-.183-.317-.733-.456-1.133-.515-7.519 3.186-12.7 9.816-12.7 17.463 0 10.741 10.22 19.48 22.784 19.48m-16.328-35.02c-.38 0-.71-.207-.886-.515-1.416 1.198-3.01 2.913-3.554 4.884l.002.001a5.03 5.03 0 0 0-.158 1.963c1.451-2.426 3.458-4.568 5.874-6.302l-.359-.61a1.02 1.02 0 0 1-.919.58m.411-1.068a.412.412 0 1 0-.823 0 .412.412 0 0 0 .823 0m-2.335-4.788-.52-.032c-.462-.03-.927-.058-1.413-.138.44-.217.908-.347 1.381-.429.475-.079.96-.107 1.445-.073a.41.41 0 0 1 .154.041c.462-.266.931-.519 1.406-.763a1.006 1.006 0 0 1-.33-.28c-1.473-.313-3.602-.319-6.115 1.394.258.087.56.204.863.355.185.093.405.24.684.423.817.541 2.003 1.32 3.304 1.403l-1.048-1.783.19-.118zm2.931-3.314a1.02 1.02 0 0 1 1.001 1.206 33.423 33.423 0 0 1 4.703-1.709l.78-2.099h-8.872v3.365h.085c.468 0 .901.041 1.295.106a1.02 1.02 0 0 1 1.008-.869m-.352 1.02a.411.411 0 1 0 .823.002.411.411 0 0 0-.823-.002m-2.127 5.876a.411.411 0 1 0 .823.001.411.411 0 0 0-.823 0m-5.655 25.807c.063 1.8 1.382 3.34 2.09 4.165.105.123.195.227.264.314.118.148.241.294.361.438.246.294.484.578.675.86.187-.484.418-1.303.522-2.552a20.055 20.055 0 0 1-1.34-1.945c.015.17.026.338.034.508.013.331.02.661-.004 1.027-.26-.263-.426-.584-.552-.909a4.342 4.342 0 0 1-.245-1.01 4.312 4.312 0 0 1-.004-1.022 18.209 18.209 0 0 1-1.199-3.119c-.462.993-.645 2.024-.602 3.245m-1.084 3.456c.21-.256.531-.703.881-1.37-.288-.628-.496-1.323-.522-2.06-.058-1.657.261-2.993 1.066-4.32a17.51 17.51 0 0 1-.317-2.042c-.05.12-.103.24-.15.36a20.317 20.317 0 0 0-.683 2.08c-.2.711-.372 1.436-.58 2.171a9.427 9.427 0 0 1 .023-2.283 9.306 9.306 0 0 1 .565-2.235 6.98 6.98 0 0 1 .75-1.415c-.002-.112-.005-.224-.005-.337 0-.679.04-1.35.117-2.013-.389.331-.768.677-1.129 1.028a1.02 1.02 0 0 1-.913 1.674c-.808 2.153-2.163 7.153.897 10.762m-.535-11.589a.411.411 0 1 0-.822 0 .411.411 0 0 0 .822 0m-2.874 1.878a35.69 35.69 0 0 1 1.64-1.928 1.02 1.02 0 0 1 1.104-1.149 22.469 22.469 0 0 1 1.965-1.738 18.009 18.009 0 0 1 1.773-5.163c-.02-.072-.04-.144-.058-.215a1.018 1.018 0 0 1-1.163.38l-.084.101.001.022c0 .49-.345.9-.806.998a31.117 31.117 0 0 0-1.277 1.8c-.478.737-.93 1.487-1.284 2.317.023-.453.135-.9.271-1.334.14-.435.318-.855.52-1.264.287-.582.622-1.138.991-1.67a1.023 1.023 0 0 1-.408-.538c-.054.02-.107.04-.16.058-2.199 2.99-3.195 6.05-3.025 9.323m6.253-11.552v-.019l-.009.01.01.01m-.337.841a.412.412 0 1 0-.824 0 .412.412 0 0 0 .824 0m-1.423 1.02a.411.411 0 1 0-.822 0 .411.411 0 0 0 .822 0m-4.234.62a10.068 10.068 0 0 1 1.917-.749c.393-.11.752-.23 1.092-.372a1.023 1.023 0 0 1 .973-.515c.115-.076.23-.159.343-.248a1.02 1.02 0 0 1 .898-.839c.22-.243.445-.514.678-.824.105-.159.205-.325.303-.498.36-1.324 1.143-2.53 2.071-3.575l-.502.431-2.036 1.78c-.678.597-1.355 1.192-2.029 1.817.44-.814 1.024-1.534 1.63-2.22a21.641 21.641 0 0 1 1.746-1.733 17.258 17.258 0 0 1-3.438.992c-1.475 1.446-3.216 3.697-3.646 6.552m.328-7.042c1.017.046 3.215.002 5.81-.919a16.891 16.891 0 0 0 3.798-1.9 1.019 1.019 0 0 1-.555-.908c-.058.033-.115.067-.174.098-.636.343-1.295.645-1.976.893-.68.244-1.387.443-2.115.511l1.882-1.03 1.864-1.012.508-.272a7.057 7.057 0 0 1-1.556-.63c-1.442.25-2.595.655-3.426 1.204-1.905 1.26-3.27 2.874-4.06 3.965m3.28-4.308c.124-.088.25-.176.38-.26.751-.498 1.728-.882 2.905-1.153a59.865 59.865 0 0 1-.302-.198c-.248-.164-.462-.306-.609-.379a6.505 6.505 0 0 0-1.429-.5l-.777-.158.627-.485c1.791-1.387 3.444-1.943 4.851-2.09v-3.407h-8.838l3.191 8.63zm6.004-13.645h-.002c-4.412 0-8.104 1.685-10.356 3.036h20.711c-2.253-1.353-5.942-3.035-10.353-3.036m12.18 3.761h-24.35v.528h24.35v-.528zm5.534-5.977-1.036 1.572-.219 6.487c.417-.019.835-.03 1.255-.034v-8.025zm1.761 1.572L298 710.964v8.025c.42.004.838.015 1.255.034l-.219-6.487zm-1.399 7.175c-6.31 0-12.339 1.645-17.457 4.761l3.004 5.11c3.99-2.68 9.008-4.28 14.453-4.28s10.464 1.6 14.454 4.28l3.004-5.11c-5.118-3.116-11.146-4.76-17.458-4.76m18.08-6.532h-.003c-4.41.001-8.1 1.683-10.353 3.036h20.711c-2.252-1.35-5.944-3.036-10.356-3.036m12.168 3.761h-24.35v.528h24.35v-.528zm-86.44-19.329c0 2.128-.099 4.28-.198 6.408a6.978 6.978 0 0 1 1.212-.123c.396 0 .792.049 1.213.123-.099-2.127-.198-4.28-.198-6.408v-4.256c0-2.128.1-4.28.198-6.408a6.98 6.98 0 0 1-1.213.123c-.395 0-.79-.05-1.212-.123.1 2.128.198 4.28.198 6.408v4.256zm21.082-10.986c-3.761 4.429-8.264 9.18-12.495 13.683-.025-.916-.075-2.401-.075-5.023 0-2.128.099-7.35.223-8.338a3.335 3.335 0 0 1-.866.123 4.06 4.06 0 0 1-.915-.123c.198 1.162.519 7.497.519 10.763 0 3.118 0 5.518-.074 6.63h.396c4.033-4.38 9.5-10.342 12.52-13.385 0 4.429 0 9.254-.198 13.064.272-.074.569-.123.84-.123.273 0 .52.049.793.123-.15-1.46-.397-6.36-.397-8.29 0-2.522.05-7.99.075-9.104h-.346zm9.032 10.986c0 1.707-.025 3.415-.074 5.122-1.707 0-3.91-.1-5.295-.273.073.248.122.52.122.792 0 .248-.049.495-.123.767a183.7 183.7 0 0 1 6.384-.123c2.127 0 4.255.049 6.383.123a2.936 2.936 0 0 1-.123-.791c0-.248.05-.52.124-.768-1.386.174-3.589.273-5.296.273a178.534 178.534 0 0 1-.074-5.122v-4.256c0-2.128.1-4.28.198-6.408a6.978 6.978 0 0 1-1.212.123 6.98 6.98 0 0 1-1.213-.123c.1 2.128.199 4.28.199 6.408v4.256zm10.59.024c0 2.128-.099 4.281-.198 6.384a87.332 87.332 0 0 1 4.43-.124c1.484 0 2.943.05 4.403.124a3.82 3.82 0 0 1 0-1.485c-2.078.15-3.29.322-6.507.322-.025-1.064-.099-1.93-.099-3.143 0-1.286.025-2.647.025-3.266 2.92 0 4.552.124 6.012.248a4.075 4.075 0 0 1-.074-.767c0-.248.025-.495.074-.742-1.707.173-4.825.222-6.012.222-.025-.594-.025-1.212-.025-3.588 0-1.88.025-3.093.05-3.71 2.202 0 5.121.024 6.68.32a4.057 4.057 0 0 1-.074-.766c0-.223.025-.495.074-.718-1.46.074-2.944.124-4.454.124-1.509 0-2.994-.05-4.503-.124.1 2.153.198 4.305.198 6.433v4.256zm12.645-.024c0 2.128-.1 4.28-.198 6.408.94-.074 1.88-.123 2.82-.123s1.88.123 2.82.123c2.797 0 5.148-.965 5.148-3.91 0-3.191-3.192-4.477-5.072-4.725 1.212-1.51 5.344-6.83 6.779-8.437-.495.074-.99.123-1.484.123a9.51 9.51 0 0 1-1.435-.123c-.99 1.509-4.281 6.062-6.41 8.214h-.94v-1.806c0-2.128.1-4.28.199-6.408a6.98 6.98 0 0 1-1.213.123c-.395 0-.791-.05-1.212-.123.099 2.128.198 4.28.198 6.408v4.256zm2.029-1.41c.445-.1 1.014-.124 1.658-.124 2.029 0 4.726.84 4.726 3.786 0 2.597-2.153 3.24-3.836 3.24-1.138 0-1.88-.073-2.4-.123-.074-1.806-.148-3.588-.148-5.37v-1.41zm13.361 1.41c0 2.128-.099 4.28-.198 6.408a26.062 26.062 0 0 1 2.4-.123c.792 0 2.376.123 3.068.123 1.485 0 5.42-.05 5.42-4.181 0-4.355-4.282-5.196-6.657-5.196-.742 0-1.36.024-2.004.074v-1.361c0-2.128.1-4.28.198-6.408a6.98 6.98 0 0 1-1.213.123c-.395 0-.79-.05-1.212-.123.1 2.128.198 4.28.198 6.408v4.256zm2.03-1.856a8.358 8.358 0 0 1 1.756-.198c2.03 0 4.627.767 4.627 4.132 0 2.82-1.609 3.415-4.157 3.415h-2.227v-7.35zm19.869 8.586c5.468 0 9.279-3.241 9.279-8.858 0-5.616-3.811-8.858-9.28-8.858-5.444 0-9.254 3.242-9.254 8.858 0 5.617 3.81 8.858 9.255 8.858m0-.915c-3.86 0-6.83-2.45-6.83-7.943 0-5.493 2.97-7.942 6.83-7.942 3.885 0 6.854 2.449 6.854 7.942s-2.97 7.943-6.854 7.943m13.015-5.815c0 2.128-.099 4.28-.198 6.408a6.978 6.978 0 0 1 1.212-.123c.396 0 .792.049 1.213.123-.099-2.127-.198-4.28-.198-6.408 0-4.157.05-7.077.074-9.501 2.326 0 4.355 0 6.83.32a2.596 2.596 0 0 1-.124-.741c0-.247.05-.495.123-.742a93.46 93.46 0 0 1-4.553.123 94.48 94.48 0 0 1-4.577-.123c.1 2.128.198 4.28.198 6.408v4.256z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport default InterpolLogo;","import { navigate } from \"@reach/router\";\nconst api = \"https://api.interpol.sd-lab.nl/api\";\n\nexport const login = async (formData) => {\n    try {\n        const response = await fetch('https://api.interpol.sd-lab.nl/api/create-session', {\n            method: 'POST',\n            body: formData,\n            credentials: 'include' // Ensure cookies are included with the request\n        });\n\n        const responseText = await response.text(); // Read the raw response body as text\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const loginResponse = JSON.parse(responseText); // Parse the response text as JSON\n\n        // Do something with the login response, e.g., handle login success or error\n        if (loginResponse && loginResponse.error) {\n            console.error('Login error:', loginResponse.error);\n            return loginResponse.error;\n        } else {\n            console.log('Login successful:', loginResponse.message);\n            return true;\n        }\n    } catch (error) {\n        console.error('Error creating session:', error);\n    }\n}\n\nexport const checkSession = async (type) => {\n    try {\n        const response = await fetch(`${api}/check-type`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error checking session:', userData.error);\n            return false;\n        }\n\n        // If user is logged in, check what type of user is logged in\n        if (type === \"STUDENT\") {\n            return userData === 'STUDENT' ? true : false;\n        } else if (type === \"DOCENT\") {\n            return userData === 'DOCENT' ? true : false;\n        } else {\n            return false;\n        }\n    } catch (error) {\n        console.error('Error checking session:', error);\n        return false;\n    }\n}\n\nexport const getStudentData = async () => {\n    try {\n        const response = await fetch(`${api}/student-data`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error student data:', userData.error);\n            return false;\n        }\n\n        if (userData) {\n            return userData;\n        } else {\n            return false;\n        }\n    } catch (error) {\n        console.error('Error checking student data:', error);\n        return false;\n    }\n}\n\nexport const getAdditionalStudentData = async (studentId) => {\n    try {\n        const response = await fetch(`${api}/student-additional-data?id=${studentId}`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const userData = await response.json();\n\n        if (userData && userData.error) {\n            console.error('Error student data:', userData.error);\n            return false;\n        }\n\n        if (userData) {\n            return userData;\n        } else {\n            return false;\n        }\n    } catch (error) {\n        console.error('Error checking student data:', error);\n        return false;\n    }\n}\n\nexport const logout = async () => {\n    try {\n        const response = await fetch('https://api.interpol.sd-lab.nl/api/logout.php', {\n            method: 'POST',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('Logout successful:', data);\n\n        // Redirect to login page or perform other actions\n        navigate('/login');\n\n    } catch (error) {\n        console.error('Error logging out:', error);\n        // Handle error, e.g., display error message\n    }\n}\n\nexport const createTeam = async (formData, setTeamSuccessfullyCreated) => {\n    try {\n        const response = await fetch(`${api}/create-team`, {\n            method: 'POST',\n            body: formData,\n        });\n        const newTeam = await response.text();\n        console.log(JSON.parse(newTeam).message);\n        if (JSON.parse(newTeam).message) {\n            setTeamSuccessfullyCreated(true);\n            // Set initial points for the team on completion\n            // ======================================\n            // TODO: Set points based on min points and time spend on the challenge\n            // ======================================\n            const setPoints = async () => {\n                const formData = new FormData();\n                formData.append('group_id', JSON.parse(newTeam).message);\n                formData.append('challenge_id', 4);\n                formData.append('completed', 1);\n                formData.append('points', Math.floor(Math.random() * 200) + 100);\n                try {\n                    const response = await fetch(`${api}/set-challenge-points`, {\n                        method: 'POST',\n                        body: formData\n                    });\n                    const success = await response.text()\n                    console.log(success);\n                } catch (error) {\n                    console.error('Error setting points:', error);\n                }\n            \n            }\n            setPoints();\n        }\n    } catch (error) {\n        console.error('Error creating team:', error);\n    }\n}\n\n\n// TODO::::: Implement the following functions :::======\nexport const getTeamData = async () => {\n    try {\n        const response = await fetch(`${api}/team-data?id=${groupId}`, {\n            method: 'GET',\n            credentials: 'include' // Include cookies in the request\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const teamData = await response.json();\n\n        if (teamData && teamData.error) {\n            console.error('Error getting team data:', teamData.error);\n            return false;\n        }\n\n        if (teamData) {\n            return teamData;\n        } else {\n            return false;\n        }\n    } catch (error) {\n        console.error('Error getting team data:', error);\n    }\n}","import React, { useEffect, useState } from 'react';\n\nconst NoSSR = ({ children }) => {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  if (!isClient) {\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\nexport default NoSSR;\n"],"sourceRoot":""}